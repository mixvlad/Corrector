@import '~@ngx-share/button/themes/default/default-theme.css';
@import './style-params.styl';
@import url('https://fonts.googleapis.com/css?family=Roboto:300,400,500,900&display=swap&subset=cyrillic');
@import '~@angular/material/prebuilt-themes/indigo-pink.css';

@font-face {
  font-family: 'Crimson';
  font-display: swap;
  src: url('assets/fonts/Crimson/Crimson-Roman.otf') format('opentype');
}

@font-face {
  font-family: 'Crimson';
  font-display: swap;
  src: url('assets/fonts/Crimson/Crimson-Bold.otf') format('opentype');
}

/* Application-wide Styles */
h1 {
  font-size: $font-size--h1-small-device;
  font-style: normal;
  font-weight: normal;
  line-height: 1.2em;
  margin: 0.875rem 0 0;
  font-family: $serif-font-family;
  position: relative;
  display: inline-block;
}

// .title::before {
// content: 'тренажёр правописания';
// font-size: $font-size;
// font-family: $font-family;
// position: absolute;
// top: -2rem;
// right: 0rem;
// letter-spacing: 0;
// }
.title {
  text-align: center;
}

.subtitle {
  font-size: 0.7rem;
  letter-spacing: 2.5px;
  // font-variant: all-petite-caps;
  font-weight: 300;
  line-height: 1.2em;
  display: block;
  margin-bottom: 10px;
  margin-top: -5px;
  text-align: center;
}

@media only screen and (min-width: 400px) {
  h1 {
    font-size: $font-size--h1;
  }

  .subtitle {
    font-size: 1.1rem;
  }
}

.logo {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-bottom: 25px;
}

.logoSvgBlock {
  margin-top: 10px;
}

a {
  color: $color-secondary;
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(49, 85, 145, 0.2)), to(rgba(49, 85, 145, 0.2)));
  background-image: -webkit-linear-gradient(rgba(49, 85, 145, 0.2), rgba(49, 85, 145, 0.2));
  background-image: -o-linear-gradient(rgba(49, 85, 145, 0.2), rgba(49, 85, 145, 0.2));
  background-image: linear-gradient(rgba(49, 85, 145, 0.2), rgba(49, 85, 145, 0.2));
  background-size: 1px 1px;
  background-position: left bottom;
  background-repeat: repeat-x;
  text-decoration: none;
}

a:hover {
  color: $color-secondary-hover;
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(49, 85, 145, 0.4)), to(rgba(49, 85, 145, 0.4)));
  background-image: -webkit-linear-gradient(rgba(49, 85, 145, 0.4), rgba(49, 85, 145, 0.4));
  background-image: -o-linear-gradient(rgba(49, 85, 145, 0.4), rgba(49, 85, 145, 0.4));
  background-image: linear-gradient(rgba(49, 85, 145, 0.4), rgba(49, 85, 145, 0.4));
}

.subscribe-block {
  a {
    text-decoration: none;
    background-image: none;
  }

  a span {
    color: $color-secondary;
    background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(49, 85, 145, 0.2)), to(rgba(49, 85, 145, 0.2)));
    background-image: -webkit-linear-gradient(rgba(49, 85, 145, 0.2), rgba(49, 85, 145, 0.2));
    background-image: -o-linear-gradient(rgba(49, 85, 145, 0.2), rgba(49, 85, 145, 0.2));
    background-image: linear-gradient(rgba(49, 85, 145, 0.2), rgba(49, 85, 145, 0.2));
    background-size: 1px 1px;
    background-position: left bottom;
    background-repeat: repeat-x;
    text-decoration: none;
  }

  a:hover span {
    color: $color-secondary-hover;
    background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(49, 85, 145, 0.4)), to(rgba(49, 85, 145, 0.4)));
    background-image: -webkit-linear-gradient(rgba(49, 85, 145, 0.4), rgba(49, 85, 145, 0.4));
    background-image: -o-linear-gradient(rgba(49, 85, 145, 0.4), rgba(49, 85, 145, 0.4));
    background-image: linear-gradient(rgba(49, 85, 145, 0.4), rgba(49, 85, 145, 0.4));
  }
}

h2 {
  color: #444;
  font-weight: 500;
  font-size: $font-size--h2;
  line-height: 1.2em;
  margin-block-end: 0.6rem;
}

h3 {
  color: $color-main;
}

.lid, h3 {
  font-size: $font-size--h3;
  line-height: $line-height;
  margin-block-end: 0.3rem;
  max-width: 32em;
}

p {
  margin: 0.6rem 0;
  line-height: $line-height;
}

input {
  padding: 10px 20px 12px 15px;
  border: $border;
  border-radius: 5px 0 0 5px;
}

li {
  list-style-type: none;
}

.small {
  font-size: $font-size--small;
}

.secondary {
  color: $color-gray;
}

html, body {
  min-height: 100%;
}

body {
  margin: 0;
  line-height: $line-height;
  background-color: $color-background;
}

body, input[type='text'] {
  color: $color-primary;
  font-family: $font-family;
}

* {
  margin: 0;
  padding: 0;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

.questionText {
  font-family: $serif-font-family;
  margin: 1.5rem 0 0;
  font-size: 1.75rem;
  font-weight: 700;
  overflow-y: auto;
  overflow-x: hidden;
  word-break: break-word;
  line-height: 1.275em;
  padding: 10px 10px 30px;
  border-radius: $border-radius;
  text-align: center;
  border: $border;
  display: flex;
  align-items: center;
  justify-content: center;
  flex: 1;
}

.questionText p {
  display: block;
  margin: auto;
  padding: 0 10px;
  line-height: 1.275em;
}

.Question__body {
  // box-shadow: $main-shadow;
  // border: $border;
  margin: 1.5rem 1px 1rem;
  border-radius: $border-radius;
}

.highlightText {
  color: $color-secondary;
  font-family: $font-family;
}

.answered .highlightText {
  font-family: inherit;
}

.right {
  color: #4EB454;
}

.wrong {
  color: #FF5261;
}

button {
  background-color: $color-primary;
  color: $color-on-dark;
  border: none;
  padding: 10px 20px;
  border-radius: $border-radius;
  cursor: pointer;
  cursor: hand;
  margin: $font-size--h3 0;
  display: block;
  font-size: 1rem;
  text-decoration: none;
  position: relative;
}

share-button button {
  margin: inherit;
}

button:hover {
  background-color: $color-primary-hover;
}

.button-secondary {
  background-color: $color-secondary;
}

.button-secondary:hover {
  background-color: $color-secondary-hover;
}

button:focus {
  outline: none;
}

.root {
  align-items: center;
  justify-content: center;
  display: flex;
  flex-direction: column;
}

.container {
  background-color: white;
  height: 100%;
  min-height: 100vh;
  width: 100%;
  position: relative;
  padding: 12px;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
}

.flexbox {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: flex-start;
}

.main-content {
  height: 80vh;
  display: flex;
  flex-direction: column;
}

.flex-content-space-betwen {
  justify-content: space-between;
}

.flex-align-end {
  align-items: flex-end;
}

@media only screen and (min-width: 700px) {
  .container {
    padding: 15px 45px;
    max-width: 1500px;
    min-width: 700px;
    box-shadow: 0px 4px 25px rgba(0, 0, 0, 0.1);
  }

  .questionText {
    font-size: 2.25rem;
  }
}

.svgBlock {
  align-self: center;
  outline: none;
}

.svgBlock svg {
  width: 100px;
  height: 15px;
}

.Question__body div:first-child .Answer__root {
  border-radius: $border-radius $border-radius 0px 0px;
}

.Question__body div:first-child .Answer__root:after {
  border-radius: $border-radius 0px 0px;
}

.Question__body div:last-child .Answer__root:after {
  border-radius: 0px 0px 0px $border-radius;
}

.Question__body div:last-child .Answer__root {
  border-radius: 0px 0px $border-radius $border-radius;
}

.Question__body div .Answer__root {
  border-right: $border;
  border-bottom: $border;
  border-left: $border;
}

.Question__body div:first-child .Answer__root {
  border-top: $border;
}

.disabled {
  opacity: 0.5;
}

share-buttons {
  margin-left: -10px;
}

.sb-default {
  // share button wrapper
  .sb-wrapper {
    height: 40px;
    width: 40px;
    min-width: 40px;
    border-radius: 40px;

    // Inner wrapper
    .sb-inner {
      // Content wrapper
      .sb-content {
        font-size: 1.2rem;

        // Icon wrapper
        .sb-icon {
          min-width: 20px;
        }

        // Text wrapper
        .sb-text {
        }
      }

      // Count wrapper
      .sb-count {
      }
    }

    // For conditional styles
    // E.g. Apply when icon, text and count are shown
    &.sb-show-icon.sb-show-text.sb-show-count {
      .sb-icon {
      }

      // Text wrapper
      .sb-text {
      }
    }
  }
}
